<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SpringMVC on What&#39;s up, yyxunn?</title>
    <link>https://yaxun-yang.github.io/tags/springmvc/</link>
    <description>Recent content in SpringMVC on What&#39;s up, yyxunn?</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>yyxun@outlook.com (yyxunn)</managingEditor>
    <webMaster>yyxun@outlook.com (yyxunn)</webMaster>
    <lastBuildDate>Thu, 02 Apr 2020 21:25:23 +0800</lastBuildDate>
    
	<atom:link href="https://yaxun-yang.github.io/tags/springmvc/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SpringMVC学习之session和model</title>
      <link>https://yaxun-yang.github.io/digital-explorations/java-web/springmvc%E5%AD%A6%E4%B9%A0%E4%B9%8Bsession%E5%92%8Cmodel/</link>
      <pubDate>Thu, 02 Apr 2020 21:25:23 +0800</pubDate>
      <author>yyxun@outlook.com (yyxunn)</author>
      <guid>https://yaxun-yang.github.io/digital-explorations/java-web/springmvc%E5%AD%A6%E4%B9%A0%E4%B9%8Bsession%E5%92%8Cmodel/</guid>
      <description>情景描述 在写鸟店的项目中，在多个页面需要用到account的信息，在myPetStore1.0里，使用session实现account长时间缓存。在SpringMVC中则不推荐使用account ， 铁哥有告诉我们用到“@SessionAttributes”标签和其它几个类似标签，但是并未具体说明，在做了一些实验，看了一些资料之后，写下我的理解。
理解 @SessionAttributes（value={&amp;ldquo;att1&amp;rdquo;,&amp;ldquo;att2&amp;rdquo;,&amp;ldquo;att3&amp;rdquo;},types={Class1.class,Class2.class}）：用于类，被value注释了名字的属性和被types注解了类型的属性将会在被加入model之后被自动加入session。取两种集合的并集。 需要特别注意的是，加入session的操作，大约是在整个被调用方法执行之后，具体表现为：
model.addAttribute(&amp;#34;account&amp;#34;,account); System.out.println(httpServletRequest.getSession().getAttribute(&amp;#34;account&amp;#34;)); ---- null 这样随后从session中取值，取到的实际上是空值
通过 SessionStatus的setComplete()方法可以清空SessionAttribute中的数据
@ModelAttribute(&amp;ldquo;att&amp;rdquo;)：用在方法，意义是使得方法中的被注释的属性自动加入model
@SessionAttribute（value=&amp;quot;att&amp;rdquo;）： 用在属性，访问预先存在的全局会话属性，可使得被注释的属性被注入存在SessionAttribute中的值</description>
    </item>
    
    <item>
      <title>SprigMVC学习之IOC注入出错</title>
      <link>https://yaxun-yang.github.io/digital-explorations/java-web/sprigmvc%E5%AD%A6%E4%B9%A0%E4%B9%8Bioc%E6%B3%A8%E5%85%A5%E5%87%BA%E9%94%99/</link>
      <pubDate>Fri, 13 Mar 2020 20:04:06 +0800</pubDate>
      <author>yyxun@outlook.com (yyxunn)</author>
      <guid>https://yaxun-yang.github.io/digital-explorations/java-web/sprigmvc%E5%AD%A6%E4%B9%A0%E4%B9%8Bioc%E6%B3%A8%E5%85%A5%E5%87%BA%E9%94%99/</guid>
      <description>背景 初学SpringMVC 尝试使用标签代替xml配置，然后报错，完整报错如下：
&amp;#34;C:\Program Files\Java\jdk1.8.0_91\bin\java.exe&amp;#34; -ea -Didea.test.cyclic.buffer.size=1048576 &amp;#34;-javaagent:D:\download\IntelliJ IDEA 2019.2.2\lib\idea_rt.jar=55492:D:\download\IntelliJ IDEA 2019.2.2\bin&amp;#34; -Dfile.encoding=UTF-8 -classpath &amp;#34;D:\download\IntelliJ IDEA 2019.2.2\lib\idea_rt.jar;D:\download\IntelliJ IDEA 2019.2.2\plugins\junit\lib\junit5-rt.jar;D:\download\IntelliJ IDEA 2019.2.2\plugins\junit\lib\junit-rt.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_91\jre\lib\rt.jar;D:\java\springDemo\springDemo\target\classes;C:\Users\87911\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\87911\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\87911\.m2\repository\org\springframework\spring-core\5.2.3.RELEASE\spring-core-5.2.3.RELEASE.jar;C:\Users\87911\.m2\repository\org\springframework\spring-jcl\5.2.3.RELEASE\spring-jcl-5.2.3.RELEASE.jar;C:\Users\87911\.m2\repository\org\springframework\spring-beans\5.2.3.RELEASE\spring-beans-5.2.3.RELEASE.jar;C:\Users\87911\.m2\repository\org\springframework\spring-expression\5.2.3.RELEASE\spring-expression-5.2.3.RELEASE.jar;C:\Users\87911\.m2\repository\org\springframework\spring-context\5.2.3.RELEASE\spring-context-5.2.3.RELEASE.jar;C:\Users\87911\.m2\repository\org\springframework\spring-aop\5.2.3.RELEASE\spring-aop-5.2.3.RELEASE.jar&amp;#34; com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit4 org.csu.springDemo.ioc.test.AccountDemo,test 三月 13, 2020 1:39:17 下午 org.springframework.context.support.AbstractApplicationContext refresh 警告: Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &amp;#39;account&amp;#39; defined in file [D:\java\springDemo\springDemo\target\classes\org\csu\springDemo\ioc\domain\Account.</description>
    </item>
    
    <item>
      <title>SpringMVC学习（目录）</title>
      <link>https://yaxun-yang.github.io/digital-explorations/java-web/springmvc%E5%AD%A6%E4%B9%A0%E7%9B%AE%E5%BD%95/</link>
      <pubDate>Fri, 13 Mar 2020 19:47:23 +0800</pubDate>
      <author>yyxun@outlook.com (yyxunn)</author>
      <guid>https://yaxun-yang.github.io/digital-explorations/java-web/springmvc%E5%AD%A6%E4%B9%A0%E7%9B%AE%E5%BD%95/</guid>
      <description>前言  在软件开发架构课程中进行SpringMVC的学习，上个学期已经学习过一些Web基础了，也完成了一个被我命名为myPetStore1.0的项目，SpringMVC的学习将完成myPetStore2.0（暂时命名为MyPetstore）,目标是实现一个普通的webapp项目转化基于springframework的webapp项目，在此记录一些在此过程中遇到的坑和感悟什么的，嗯，应该也会包括对intellJ IDEA 使用的备忘。为了方便查找，写成系列文章好了，此篇为目录。 再次重构，将spring 和 vue 结合， 完成第三版 myPetStore3.0,实现前后端分离，也将问题和理解在这里记录。
目录 坑   [IOC注入失败](&amp;ldquo;Digital Explorations/java web/SpringMVC学习之IOC注入出错.md&amp;rdquo;)
  IDEA未导入Maven插件
  关于细节的理解  session和model  初始化配置  spring boot 初始化  </description>
    </item>
    
  </channel>
</rss>